openapi: '3.0.0'
info:
  description: 'Backend to manage Island Reservations'
  version: 1.0.0
  title: Island Reservation API

paths:
  /reservations:
    post:
      tags:
        - Reservations
      summary: Create a new reservation
      operationId: createReservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '200':
          description: 'Successfully created reservation.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewReservationResponse'
        '400':
          description: 'Bad request.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2020-11-14T22:31:42.035+00:00"
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: array
                    items:
                      type: string
                  path:
                    type: string
                    example: "/reservations"
        '403':
          description: 'Forbidden request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2020-11-14T22:31:42.035+00:00"
                  status:
                    type: integer
                    example: 403
                  error:
                    type: string
                    example: "Forbidden Request"
                  message:
                    type: array
                    items:
                      type: string
                  path:
                    type: string
                    example: "/reservations"
        '500':
          description: 'Internal Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2020-11-14T22:31:42.035+00:00"
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: array
                    items:
                      type: string
                  path:
                    type: string
                    example: "/reservations"

  /reservations/{reservation_id}:
    get:
      tags:
        - Reservations
      summary: gets an existing reservation
      operationId: getReservation
      parameters:
        - in: path
          name: reservation_id
          required: true
          schema:
            type: string
            pattern: "[A-Z0-9]{8}"
            example: "AZ123456"
      responses:
        '200':
          description: 'Successfully retrieved reservation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '404':
          description: 'Reservation not found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2020-11-14T22:31:42.035+00:00"
                  status:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: array
                    items:
                      type: string
                  path:
                    type: string
                    example: "/reservations/{reservation_id}"
        '500':
          description: 'Internal Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2020-11-14T22:31:42.035+00:00"
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: array
                    items:
                      type: string
                  path:
                    type: string
                    example: "/reservations/{reservation_id}"

  /reservations/{reservation_id}/{transaction}:
    put:
      tags:
        - Reservations
      summary: Modifies an existing reservation
      operationId: updateReservation
      parameters:
        - in: path
          name: reservation_id
          required: true
          schema:
            type: string
            pattern: "[A-Z0-9]{8}"
            example: "AZ123456"
        - in: path
          name: transaction
          required: true
          schema:
            type: string
            enum: [ MODIFY, CANCEL ]
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '200':
          description: 'Successfully updated reservation.'
        '400':
          description: 'Bad request.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2020-11-14T22:31:42.035+00:00"
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: "Bad Request"
                  message:
                    type: array
                    items:
                      type: string
                  path:
                    type: string
                    example: "/reservations/{reservation_id}/{transaction}"
        '403':
          description: 'Forbidden'
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2020-11-14T22:31:42.035+00:00"
                  status:
                    type: integer
                    example: 403
                  error:
                    type: string
                    example: "Forbidden Request"
                  message:
                    type: array
                    items:
                      type: string
                  path:
                    type: string
                    example: "/reservations/{reservation_id}/{transaction}"
        '404':
          description: 'Reservation not found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2020-11-14T22:31:42.035+00:00"
                  status:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: "Not Found"
                  message:
                    type: array
                    items:
                      type: string
                  path:
                    type: string
                    example: "/reservations/{reservation_id}/{transaction}"
        '500':
          description: 'Internal Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2020-11-14T22:31:42.035+00:00"
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: array
                    items:
                      type: string
                  path:
                    type: string
                    example: "/reservations/{reservation_id}/{transaction}"

  /campsite/calendar/dates:
    get:
      tags:
        - Calendar
      summary: get campsite availability
      operationId: getCampsiteAvailability
      parameters:
        - in: query
          name: available
          schema:
            type: boolean
            default: true
        - in: query
          name: range
          schema:
            $ref: '#/components/schemas/Range'
      responses:
        '200':
          description: 'Successfully retrieved reservations'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: date
        '500':
          description: 'Internal Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2020-11-14T22:31:42.035+00:00"
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: "Internal Server Error"
                  message:
                    type: array
                    items:
                      type: string
                  path:
                    type: string
                    example: "/campsite/calendar/dates"

components:
  schemas:
    Reservation:
      required: [
          "client",
          "startDate",
          "endDate"
      ]
      type: object
      properties:
        client:
          $ref: '#/components/schemas/Client'
        startDate:
          type: string
          format: date
          example: '2020-01-01'
        endDate:
          type: string
          format: date
          example: '2020-02-01'

    Client:
      required: [
          "email",
          "firstName",
          "lastName"
      ]
      type: object
      properties:
        email:
          type: string
          format: email
          example: my_email@myorganization.ca
          pattern: '[\w-\.]+@([\w-]+\.)+[\w-]{2,4}'
        firstName:
          type: string
          example: 'John'
        lastName:
          type: string
          example: 'Smith'

    Range:
      type: string
      enum: [ WEEK, MONTH ]

    NewReservationResponse:
      type: object
      properties:
        reservationNumber:
          type: string
          pattern: "[A-Z0-9]{8}"
          example: "AZ123456"

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
        error:
          type: string
        message:
          type: array
          items:
            type: string
        path:
          type: string

    Errorss:
      type: string
      enum: [ IRP1,IRP2,IRP3,IRP4,IRG1,IRPU1,IRPU2,IRPU3,IRPU4,IRPU5,IRPU6,IRPU7 ]
      description: |
        * `IRP1` - Reservation is for more than 3 days
        * `IRP2` - Start & End dates are not with in a month
        * `IRP3` - Cannot reserve desired time range, already reserved by someone else
        * `IRP4` - Cannot reserve, client already has another existing reservation
        * `IRG1` - Cannot find a reservation with that ID
        * `IRPU1` - Reservation is for more than 3 days
        * `IRPU2` - Start & End dates are not with in a month
        * `IRPU3` - Can not modify an empty reservation
        * `IRPU4` - Request body has to be empty to cancel the reservation
        * `IRPU5` - Nothing to modify
        * `IRPU6` - Cannot reserve desired time range, already reserved by someone else
        * `IRPU7` - Cannot find a reservation with that ID to modify or cancel